/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OracleWrapper, OracleWrapperInterface } from "../OracleWrapper";

const _abi = [
  {
    inputs: [],
    name: "OPERATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "assetOracles",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103da806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632970fdfa14610051578063983d27371461006d578063a8239d0b1461008b578063c982aa17146100a7575b600080fd5b61006b6004803603810190610066919061020a565b6100d7565b005b6100756100db565b6040516100829190610297565b60405180910390f35b6100a560048036038101906100a0919061020a565b6100ff565b005b6100c160048036038101906100bc91906101c9565b610103565b6040516100ce919061027c565b60405180910390f35b5050565b7f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c81565b5050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061015f61015a846102e3565b6102b2565b90508281526020810184848401111561017757600080fd5b61018284828561034f565b509392505050565b6000813590506101998161038d565b92915050565b600082601f8301126101b057600080fd5b81356101c084826020860161014c565b91505092915050565b6000602082840312156101db57600080fd5b600082013567ffffffffffffffff8111156101f557600080fd5b6102018482850161019f565b91505092915050565b6000806040838503121561021d57600080fd5b600083013567ffffffffffffffff81111561023757600080fd5b6102438582860161019f565b92505060206102548582860161018a565b9150509250929050565b61026781610313565b82525050565b61027681610325565b82525050565b6000602082019050610291600083018461025e565b92915050565b60006020820190506102ac600083018461026d565b92915050565b6000604051905081810181811067ffffffffffffffff821117156102d9576102d861035e565b5b8060405250919050565b600067ffffffffffffffff8211156102fe576102fd61035e565b5b601f19601f8301169050602081019050919050565b600061031e8261032f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61039681610313565b81146103a157600080fd5b5056fea26469706673582212205fc65b814ce2197817c19bbb96250fb1a7809619fdfe434b81a64459318b205d64736f6c63430008000033";

export class OracleWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleWrapper> {
    return super.deploy(overrides || {}) as Promise<OracleWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleWrapper {
    return super.attach(address) as OracleWrapper;
  }
  connect(signer: Signer): OracleWrapper__factory {
    return super.connect(signer) as OracleWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleWrapperInterface {
    return new utils.Interface(_abi) as OracleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleWrapper {
    return new Contract(address, _abi, signerOrProvider) as OracleWrapper;
  }
}
