/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IPoolKeeper, IPoolKeeperInterface } from "../IPoolKeeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        internalType: "string",
        name: "poolCode",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "updateInterval",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "frontRunningInterval",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "fee",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "leverageAmount",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "feeAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "poolCodes",
        type: "string[]",
      },
    ],
    name: "triggerPriceUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "updateOracleWrapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPoolKeeper__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolKeeperInterface {
    return new utils.Interface(_abi) as IPoolKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPoolKeeper {
    return new Contract(address, _abi, signerOrProvider) as IPoolKeeper;
  }
}
